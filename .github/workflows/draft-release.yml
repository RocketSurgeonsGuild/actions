name: Create Milestone and Draft Release
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
jobs:
  milestone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch all history for all tags and branches
        run: git fetch --prune

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@master
        with:
          versionSpec: '5.x'

      - name: Install GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup@master
        with:
          versionSpec: '0.11.x'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@master

      - name: Create Milestone
        uses: WyriHaximus/github-action-create-milestone@0.1.0
        with:
          title: v${{ steps.gitversion.outputs.majorMinorPatch }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        continue-on-error: true

      - name: Get Repo and Owner
        shell: pwsh
        id: repository
        run: |
          $parts = $ENV:GITHUB_REPOSITORY.Split('/')
          echo "::set-output name=owner::$($parts[0])"
          echo "::set-output name=repository::$($parts[1])"

      - name: sync milestones
        uses: ./sync-milestone/
        with:
          default-label: ':sparkles: mysterious'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Draft Release
        shell: pwsh
        run: |
          dotnet gitreleasemanager create `
            -o "${{ steps.repository.outputs.owner }}" `
            -r "${{ steps.repository.outputs.repository }}" `
            --token "${{ secrets.GITHUB_TOKEN }}" `
            -m "v${{ steps.gitversion.outputs.majorMinorPatch }}"

      - name: Export Changelog
        shell: pwsh
        run: |
          dotnet gitreleasemanager export `
            -o "${{ steps.repository.outputs.owner }}" `
            -r "${{ steps.repository.outputs.repository }}" `
            --token "${{ secrets.GITHUB_TOKEN }}" `
            -f CHANGELOG.md

      - name: Branch Guardian - Disable Status Checks
        uses: infamous-riddles/branch-guardian@v1
        with:
          PERSONAL-ACCESS-TOKEN: ${{ secrets.RSG_BOT_TOKEN }}
          REQUIRED-STATUS-CHECKS: 'build'
          INCLUDE-ADMINISTRATORS: false
          BASE-BRANCH-PATTERN: '^master$'

      - name: Commit files
        run: |
          git config --local user.email "rsg-bot@github.com"
          git config --local user.name "rsg-bot"
          git add CHANGELOG.md
          git commit -m "Add changes"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.RSG_BOT_TOKEN }}

      - name: Branch Guardian - Enable Status Checks
        uses: infamous-riddles/branch-guardian@v1
        with:
          PERSONAL-ACCESS-TOKEN: ${{ secrets.RSG_BOT_TOKEN }}
          REQUIRED-STATUS-CHECKS: 'build'
          INCLUDE-ADMINISTRATORS: false
          BASE-BRANCH-PATTERN: '^master$'
