name: Close Milestone

on:
  workflow_call:
    # inputs:
    secrets:
      RSG_BOT_TOKEN:
        required: true
  release:
    types:
      - released

jobs:
  close_milestone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-dotnet@v4

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          # renovate: datasource=github-releases depName=gittools/gitversion
          versionSpec: '6.1.0'

      - name: Install GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup@v3.2.0
        with:
          # renovate: datasource=github-releases depName=gittools/gitreleasemanager
          versionSpec: '0.18.0'

      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.0

      # Ensure the milestone exists
      - name: Create Milestone
        uses: WyriHaximus/github-action-create-milestone@v1
        with:
          title: v${{ steps.gitversion.outputs.majorMinorPatch }}
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        continue-on-error: true

      # move any issues to that milestone in the event the release is renamed
      - name: sync milestones
        uses: RocketSurgeonsGuild/actions/sync-milestone@v0.3.15
        with:
          default-label: ':sparkles: mysterious'
          github-token: ${{ secrets.RSG_BOT_TOKEN }}

      - name: Get Repo and Owner
        shell: pwsh
        id: repository
        if: ${{ !github.event.release.prerelease && steps.gitversion.outputs.preReleaseTag == '' }}
        run: |
          $parts = $ENV:GITHUB_REPOSITORY.Split('/')
          echo "::set-output name=owner::$($parts[0])"
          echo "::set-output name=repository::$($parts[1])"

      - name: Close Milestone
        shell: pwsh
        if: ${{ !github.event.release.prerelease && steps.gitversion.outputs.preReleaseTag == '' }}
        run: |
          dotnet gitreleasemanager close `
            -o "${{ steps.repository.outputs.owner }}" `
            -r "${{ steps.repository.outputs.repository }}" `
            --token "${{ secrets.GITHUB_TOKEN }}" `
            -m "v${{ steps.gitversion.outputs.majorMinorPatch }}"
